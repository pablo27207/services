services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db_init/init.sql:/docker-entrypoint-initdb.d/init.sql
    #ports:
    #  - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:alpine
    container_name: redis_cache
    restart: always
   # ports:
   #   - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api_ingestor:
    build: 
      context: ./api_ingestor
      dockerfile: Dockerfile
    container_name: api_ingestor
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./api_ingestor:/app
      - ./logs:/app/logs
    restart: unless-stopped
    #ports:
    #  - "5000:5000"

  celery_worker:
    build: 
      context: ./api_ingestor
      dockerfile: Dockerfile
    container_name: celery_worker
    depends_on:
      - db
      - cache
      - api_ingestor
    env_file:
      - .env
    environment:
      - CELERY_WORKER=true
      - CELERY_LOG_LEVEL=INFO
    volumes:
      - ./api_ingestor:/app
      - ./logs:/app/logs
    restart: always
    command: celery -A celery_tasks worker --loglevel=info
  
  celery_beat:
    build: 
      context: ./api_ingestor
      dockerfile: Dockerfile
    container_name: celery_beat
    depends_on:
      - celery_worker
    env_file:
      - .env
    environment:
      - CELERY_WORKER=true
      - CELERY_LOG_LEVEL=INFO
    volumes:
      - ./api_ingestor:/app
      - ./logs:/app/logs
    restart: always
    command: celery -A celery_tasks beat --loglevel=info

  flower:
    image: mher/flower
    container_name: celery_flower
    restart: always
    depends_on:
      - celery_worker
    env_file:
      - .env
    command: celery --broker=redis://cache:6379/0 flower --port=5555
   # ports:
   #   - "5555:5555"
    environment:
      - FLOWER_BASIC_AUTH=${FLOWER_USER}:${FLOWER_PASSWORD}
    
  web_app:
    build: ./web_app
    container_name: web_app
    depends_on:
      - db
      - api_ingestor
    env_file:
      - .env
    restart: always
    volumes:
      - ./web_app:/app
   # ports:
   #   - "5001:5001"
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    depends_on:
      - web_app
      - api_ingestor
      - flower
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    restart: always


volumes:
  db_data: